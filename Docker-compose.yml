services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
    networks:
      - ecommerce-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - ecommerce-network

  mongo:
    image: mongo:7.0
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INIT-DB_ROOT_USERNAME: admin
      MONGO_INIT-DB_ROOT_PASSWORD: password
      MONGO_INIT-DB_DATABASE: catalog
    volumes:
      - mongo_data:/data/db
    networks:
      - ecommerce-network

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6380:6379"
    command: redis-server --append only yes
    volumes:
      - redis_data:/data
    networks:
      - ecommerce-network

  catalog:
    build:
      context: ./catalog
      dockerfile: Dockerfile
    container_name: catalog
    depends_on:
      - kafka
      - redis
      - mongo
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_DATA_MONGODB_URI: mongodb://admin:password@mongo:27017/catalog?authSource=admin
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge

volumes:
  mongo_data:
  redis_data:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:
  