version: '3.8'

services:
  catalog:
    build:
      context: ./catalog
      dockerfile: Dockerfile
    container_name: catalog
    depends_on:
      - kafka
      - redis
      - mongo
    ports:
      - "8080:8080"
    environment:
      MONGO_URL: mongodb://mongo:27017/catalog
      SPRING_DATA_REDIS_HOST: redis 
      SPRING_DATA_REDIS_PORT: 6379
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - ecommerce-network
    

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - ecommerce-network
  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - ecommerce-network
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - ecommerce-network
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 168
    networks:
      - ecommerce-network
    volumes:
      - kafka-data:/var/lib/kafka/data

networks:
  ecommerce-network:
    driver: bridge
volumes:
  mongo_data:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:

  